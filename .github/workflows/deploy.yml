name: Deploy Develop to Amazon ECS

on:
  push:
    branches: [ "develop"]

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
            distribution: temurin
            java-version: 21

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-  

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew clean build --info
        shell: bash

      - name: Docker build & push to dockerhub
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/kbo-combo-app .
          docker push ${{ secrets.DOCKER_REPO }}/kbo-combo-app

      - name: Deploy to ec2
        uses: appleboy/ssh-action@master
        id: deploy-develop
        with:
          host: ${{ secrets.HOST_EC2 }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            cd ~/docker
            docker-compose -p kbocombo -f docker-compose.yml down
            docker pull ${{ secrets.DOCKER_REPO }}/kbo-combo-app
            docker tag ${{ secrets.DOCKER_REPO }}/kbo-combo-app kbo-combo-app
            docker rmi ${{ secrets.DOCKER_REPO }}/kbo-combo-app
            docker-compose -p kbocombo -f docker-compose.yml up -d
            docker image prune -f

  notification:
    name: Notification
    runs-on: ubuntu-22.04
    if: ${{ always() }}
    needs: [ deploy ]
    steps:
      - uses: martialonline/workflow-status@v3
        id: check
      - name: action-slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ steps.check.outputs.status }}
          author_name: Github Action Bot
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOY_WEBHOOK_URL }}
        if: always()
